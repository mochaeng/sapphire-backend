services:
    api:
        image: sapphire-backend
        container_name: api
        environment:
            - ADDR=${ADDR}
            - DATABASE_URL=${DATABASE_URL}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_ADDR=${REDIS_ADDR}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - REDIS_DB=${REDIS_DB}
        ports:
            - "7777:7777"
        restart: unless-stopped
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        profiles:
            - prod

    db:
        image: postgres:16.4
        container_name: postgres-db
        environment:
            - POSTGRES_DB=${DATABASE_NAME}
            - POSTGRES_USER=${DATABASE_USER}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        volumes:
            - db-volume:/var/lib/postgresql/data
            # - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "${DATABASE_PORT}:5432"
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}",
                ]
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 10s

    redis:
        image: redis:6.2-alpine
        restart: unless-stopped
        container_name: redis
        ports:
            - "${REDIS_PORT}:6379"
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        command: redis-server --requirepass $${REDIS_PASSWORD} --save 60 1 --loglevel warning
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 10s

volumes:
    db-volume:
